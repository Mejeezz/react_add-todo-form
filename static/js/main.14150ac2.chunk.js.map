{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","doneOrNot","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","visibleTodos","App","useState","setTitle","setUserId","erroeTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","newTodo","Math","max","push","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14150ac2.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  const doneOrNot = classNames(\n    'TodoInfo',\n    { 'TodoInfo TodoInfo--completed': completed },\n  );\n\n  return (\n    <article data-id={id} className={doneOrNot}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst visibleTodos = [...todos];\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [erroeTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handeApprove = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0 || title === '') {\n      setErrorTitle(title === '');\n      setErrorUser(userId === 0);\n\n      return;\n    }\n\n    const maxId = Math.max(...visibleTodos.map(todo => todo.id));\n\n    const newTodo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handeApprove}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setErrorTitle(false);\n            }}\n          />\n          {erroeTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User: </label>\n          <select\n            id=\"select\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setErrorUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}